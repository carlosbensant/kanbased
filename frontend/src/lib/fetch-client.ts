import createClient, { type Middleware } from "openapi-fetch";
import type { paths } from "@/types/api-schema"; // generated by openapi-typescript
import { routeMap } from "@/lib/constants";

const originalFetch = window.fetch;
window.fetch = (url, options = {}) => {
  const newOptions: Record<string, any> = {
    ...options,
    credentials: 'include',
  };
  return originalFetch(url, newOptions);
};

export const fetchClient = createClient<paths>({
  baseUrl: process.env.NEXT_PUBLIC_API_URL,
});

const authMiddleware: Middleware = {
  async onResponse({ response, }) {
    if (response.status === 401) {
      window.location.href = routeMap.login
      return;
    }
    return undefined;
  },
};

fetchClient.use(authMiddleware);
