/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password/route'
import { Route as AuthRegisterRouteImport } from './routes/auth/register/route'
import { Route as AuthLoginRouteImport } from './routes/auth/login/route'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password/route'
import { Route as LayoutBoardsRouteImport } from './routes/_layout/boards/route'
import { Route as LayoutBoardsBoardNameRouteImport } from './routes/_layout/boards_.$boardName/route'

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthResetPasswordRouteRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRouteRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRouteRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRouteRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

const LayoutBoardsRouteRoute = LayoutBoardsRouteImport.update({
  id: '/boards',
  path: '/boards',
  getParentRoute: () => LayoutRoute,
} as any)

const LayoutBoardsBoardNameRouteRoute = LayoutBoardsBoardNameRouteImport.update(
  {
    id: '/boards_/$boardName',
    path: '/boards/$boardName',
    getParentRoute: () => LayoutRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/_layout/boards': {
      id: '/_layout/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof LayoutBoardsRouteImport
      parentRoute: typeof LayoutImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutImport
    }
    '/_layout/boards_/$boardName': {
      id: '/_layout/boards_/$boardName'
      path: '/boards/$boardName'
      fullPath: '/boards/$boardName'
      preLoaderRoute: typeof LayoutBoardsBoardNameRouteImport
      parentRoute: typeof LayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutRouteChildren {
  LayoutBoardsRouteRoute: typeof LayoutBoardsRouteRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutBoardsBoardNameRouteRoute: typeof LayoutBoardsBoardNameRouteRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutBoardsRouteRoute: LayoutBoardsRouteRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutBoardsBoardNameRouteRoute: LayoutBoardsBoardNameRouteRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LayoutRouteWithChildren
  '/boards': typeof LayoutBoardsRouteRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/register': typeof AuthRegisterRouteRoute
  '/auth/reset-password': typeof AuthResetPasswordRouteRoute
  '/': typeof LayoutIndexRoute
  '/boards/$boardName': typeof LayoutBoardsBoardNameRouteRoute
}

export interface FileRoutesByTo {
  '/boards': typeof LayoutBoardsRouteRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/register': typeof AuthRegisterRouteRoute
  '/auth/reset-password': typeof AuthResetPasswordRouteRoute
  '/': typeof LayoutIndexRoute
  '/boards/$boardName': typeof LayoutBoardsBoardNameRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/boards': typeof LayoutBoardsRouteRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRouteRoute
  '/auth/login': typeof AuthLoginRouteRoute
  '/auth/register': typeof AuthRegisterRouteRoute
  '/auth/reset-password': typeof AuthResetPasswordRouteRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/boards_/$boardName': typeof LayoutBoardsBoardNameRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/boards'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/'
    | '/boards/$boardName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/boards'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/'
    | '/boards/$boardName'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/boards'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/_layout/'
    | '/_layout/boards_/$boardName'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
  AuthForgotPasswordRouteRoute: typeof AuthForgotPasswordRouteRoute
  AuthLoginRouteRoute: typeof AuthLoginRouteRoute
  AuthRegisterRouteRoute: typeof AuthRegisterRouteRoute
  AuthResetPasswordRouteRoute: typeof AuthResetPasswordRouteRoute
}

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
  AuthForgotPasswordRouteRoute: AuthForgotPasswordRouteRoute,
  AuthLoginRouteRoute: AuthLoginRouteRoute,
  AuthRegisterRouteRoute: AuthRegisterRouteRoute,
  AuthResetPasswordRouteRoute: AuthResetPasswordRouteRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_layout",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/register",
        "/auth/reset-password"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/boards",
        "/_layout/",
        "/_layout/boards_/$boardName"
      ]
    },
    "/_layout/boards": {
      "filePath": "_layout/boards/route.tsx",
      "parent": "/_layout"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password/route.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login/route.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register/route.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password/route.tsx"
    },
    "/_layout/": {
      "filePath": "_layout/index.tsx",
      "parent": "/_layout"
    },
    "/_layout/boards_/$boardName": {
      "filePath": "_layout/boards_.$boardName/route.tsx",
      "parent": "/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
