/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRegisterImport } from './routes/auth.register'
import { Route as AuthLoginImport } from './routes/auth.login'
import { Route as AuthenticatedBoardLayoutImport } from './routes/_authenticated/_board-layout'
import { Route as AuthenticatedBoardLayoutBoardsRouteImport } from './routes/_authenticated/_board-layout/boards/route'
import { Route as AuthenticatedBoardLayoutBoardsBoardNameRouteImport } from './routes/_authenticated/_board-layout/boards_.$boardName/route'

// Create/Update Routes

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedBoardLayoutRoute = AuthenticatedBoardLayoutImport.update({
  id: '/_board-layout',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedBoardLayoutBoardsRouteRoute =
  AuthenticatedBoardLayoutBoardsRouteImport.update({
    id: '/boards',
    path: '/boards',
    getParentRoute: () => AuthenticatedBoardLayoutRoute,
  } as any)

const AuthenticatedBoardLayoutBoardsBoardNameRouteRoute =
  AuthenticatedBoardLayoutBoardsBoardNameRouteImport.update({
    id: '/boards_/$boardName',
    path: '/boards/$boardName',
    getParentRoute: () => AuthenticatedBoardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_board-layout': {
      id: '/_authenticated/_board-layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedBoardLayoutImport
      parentRoute: typeof AuthenticatedImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_board-layout/boards': {
      id: '/_authenticated/_board-layout/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof AuthenticatedBoardLayoutBoardsRouteImport
      parentRoute: typeof AuthenticatedBoardLayoutImport
    }
    '/_authenticated/_board-layout/boards_/$boardName': {
      id: '/_authenticated/_board-layout/boards_/$boardName'
      path: '/boards/$boardName'
      fullPath: '/boards/$boardName'
      preLoaderRoute: typeof AuthenticatedBoardLayoutBoardsBoardNameRouteImport
      parentRoute: typeof AuthenticatedBoardLayoutImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedBoardLayoutRouteChildren {
  AuthenticatedBoardLayoutBoardsRouteRoute: typeof AuthenticatedBoardLayoutBoardsRouteRoute
  AuthenticatedBoardLayoutBoardsBoardNameRouteRoute: typeof AuthenticatedBoardLayoutBoardsBoardNameRouteRoute
}

const AuthenticatedBoardLayoutRouteChildren: AuthenticatedBoardLayoutRouteChildren =
  {
    AuthenticatedBoardLayoutBoardsRouteRoute:
      AuthenticatedBoardLayoutBoardsRouteRoute,
    AuthenticatedBoardLayoutBoardsBoardNameRouteRoute:
      AuthenticatedBoardLayoutBoardsBoardNameRouteRoute,
  }

const AuthenticatedBoardLayoutRouteWithChildren =
  AuthenticatedBoardLayoutRoute._addFileChildren(
    AuthenticatedBoardLayoutRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedBoardLayoutRoute: typeof AuthenticatedBoardLayoutRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedBoardLayoutRoute: AuthenticatedBoardLayoutRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedBoardLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/boards': typeof AuthenticatedBoardLayoutBoardsRouteRoute
  '/boards/$boardName': typeof AuthenticatedBoardLayoutBoardsBoardNameRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedBoardLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/boards': typeof AuthenticatedBoardLayoutBoardsRouteRoute
  '/boards/$boardName': typeof AuthenticatedBoardLayoutBoardsBoardNameRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/_board-layout': typeof AuthenticatedBoardLayoutRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_authenticated/_board-layout/boards': typeof AuthenticatedBoardLayoutBoardsRouteRoute
  '/_authenticated/_board-layout/boards_/$boardName': typeof AuthenticatedBoardLayoutBoardsBoardNameRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/auth/login'
    | '/auth/register'
    | '/boards'
    | '/boards/$boardName'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/auth/login'
    | '/auth/register'
    | '/boards'
    | '/boards/$boardName'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/_board-layout'
    | '/auth/login'
    | '/auth/register'
    | '/_authenticated/_board-layout/boards'
    | '/_authenticated/_board-layout/boards_/$boardName'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/_board-layout"
      ]
    },
    "/_authenticated/_board-layout": {
      "filePath": "_authenticated/_board-layout.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/_board-layout/boards",
        "/_authenticated/_board-layout/boards_/$boardName"
      ]
    },
    "/auth/login": {
      "filePath": "auth.login.tsx"
    },
    "/auth/register": {
      "filePath": "auth.register.tsx"
    },
    "/_authenticated/_board-layout/boards": {
      "filePath": "_authenticated/_board-layout/boards/route.tsx",
      "parent": "/_authenticated/_board-layout"
    },
    "/_authenticated/_board-layout/boards_/$boardName": {
      "filePath": "_authenticated/_board-layout/boards_.$boardName/route.tsx",
      "parent": "/_authenticated/_board-layout"
    }
  }
}
ROUTE_MANIFEST_END */
